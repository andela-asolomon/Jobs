"use strict";var ApplicationConfiguration=function(){var applicationModuleName="jobfinder",applicationModuleVendorDependencies=["ngResource","ui.router","ui.bootstrap","ui.utils"],registerModule=function(moduleName){angular.module(moduleName,[]),angular.module(applicationModuleName).requires.push(moduleName)};return{applicationModuleName:applicationModuleName,applicationModuleVendorDependencies:applicationModuleVendorDependencies,registerModule:registerModule}}();angular.module(ApplicationConfiguration.applicationModuleName,ApplicationConfiguration.applicationModuleVendorDependencies),angular.module(ApplicationConfiguration.applicationModuleName).config(["$locationProvider",function($locationProvider){$locationProvider.hashPrefix("!")}]),angular.element(document).ready(function(){"#_=_"===window.location.hash&&(window.location.hash="#!"),angular.bootstrap(document,[ApplicationConfiguration.applicationModuleName])}),ApplicationConfiguration.registerModule("core"),ApplicationConfiguration.registerModule("jobfinders"),ApplicationConfiguration.registerModule("users"),angular.module("core").config(["$stateProvider","$urlRouterProvider",function($stateProvider,$urlRouterProvider){$urlRouterProvider.otherwise("/"),$stateProvider.state("home",{url:"/",templateUrl:"modules/jobfinders/views/list-jobfinders.client.view.html"})}]),angular.module("core").controller("HeaderController",["$scope","Authentication","Menus",function($scope,Authentication,Menus){$scope.authentication=Authentication,$scope.isCollapsed=!1,$scope.menu=Menus.getMenu("topbar"),$scope.toggleCollapsibleMenu=function(){$scope.isCollapsed=!$scope.isCollapsed},$scope.$on("$stateChangeSuccess",function(){$scope.isCollapsed=!1})}]),angular.module("core").controller("HomeController",["$scope","Authentication","$rootScope",function($scope,Authentication){$scope.authentication=Authentication}]),angular.module("core").service("Menus",[function(){this.defaultRoles=["user"],this.menus={};var shouldRender=function(user){if(!user)return this.isPublic;for(var userRoleIndex in user.roles)for(var roleIndex in this.roles)if(this.roles[roleIndex]===user.roles[userRoleIndex])return!0;return!1};this.validateMenuExistance=function(menuId){if(menuId&&menuId.length){if(this.menus[menuId])return!0;throw new Error("Menu does not exists")}throw new Error("MenuId was not provided")},this.getMenu=function(menuId){return this.validateMenuExistance(menuId),this.menus[menuId]},this.addMenu=function(menuId,isPublic,roles){return this.menus[menuId]={isPublic:isPublic||!1,roles:roles||this.defaultRoles,items:[],shouldRender:shouldRender},this.menus[menuId]},this.removeMenu=function(menuId){this.validateMenuExistance(menuId),delete this.menus[menuId]},this.addMenuItem=function(menuId,menuItemTitle,menuItemURL,menuItemType,menuItemUIRoute,isPublic,roles){return this.validateMenuExistance(menuId),this.menus[menuId].items.push({title:menuItemTitle,link:menuItemURL,menuItemType:menuItemType||"item",menuItemClass:menuItemType,uiRoute:menuItemUIRoute||"/"+menuItemURL,isPublic:isPublic||this.menus[menuId].isPublic,roles:roles||this.defaultRoles,items:[],shouldRender:shouldRender}),this.menus[menuId]},this.addSubMenuItem=function(menuId,rootMenuItemURL,menuItemTitle,menuItemURL,menuItemUIRoute,isPublic,roles){this.validateMenuExistance(menuId);for(var itemIndex in this.menus[menuId].items)this.menus[menuId].items[itemIndex].link===rootMenuItemURL&&this.menus[menuId].items[itemIndex].items.push({title:menuItemTitle,link:menuItemURL,uiRoute:menuItemUIRoute||"/"+menuItemURL,isPublic:isPublic||this.menus[menuId].isPublic,roles:roles||this.defaultRoles,shouldRender:shouldRender});return this.menus[menuId]},this.removeMenuItem=function(menuId,menuItemURL){this.validateMenuExistance(menuId);for(var itemIndex in this.menus[menuId].items)this.menus[menuId].items[itemIndex].link===menuItemURL&&this.menus[menuId].items.splice(itemIndex,1);return this.menus[menuId]},this.removeSubMenuItem=function(menuId,submenuItemURL){this.validateMenuExistance(menuId);for(var itemIndex in this.menus[menuId].items)for(var subitemIndex in this.menus[menuId].items[itemIndex].items)this.menus[menuId].items[itemIndex].items[subitemIndex].link===submenuItemURL&&this.menus[menuId].items[itemIndex].items.splice(subitemIndex,1);return this.menus[menuId]},this.addMenu("topbar")}]),angular.module("jobfinders").run(["Menus",function(Menus){Menus.addMenuItem("topbar","Jobs","jobfinders","dropdown","/jobfinders(/create)?"),Menus.addSubMenuItem("topbar","jobfinders","View Jobs","jobfinders"),Menus.addSubMenuItem("topbar","jobfinders","Create Jobs","jobfinders/create")}]),angular.module("jobfinders").config(["$stateProvider",function($stateProvider){$stateProvider.state("listJobfinders",{url:"/jobfinders",templateUrl:"modules/jobfinders/views/list-jobfinders.client.view.html"}).state("createJobfinder",{url:"/jobfinders/create",templateUrl:"modules/jobfinders/views/create-jobfinder.client.view.html"}).state("viewJobfinder",{url:"/jobfinders/:jobfinderId",templateUrl:"modules/jobfinders/views/view-jobfinder.client.view.html"}).state("editJobfinder",{url:"/jobfinders/:jobfinderId/edit",templateUrl:"modules/jobfinders/views/edit-jobfinder.client.view.html"}).state("applyJobfinder",{url:"/jobfinders/:jobfinderId/apply",templateUrl:"modules/jobfinders/views/apply-jobfinder.client.view.html"})}]),angular.module("jobfinders").controller("JobfindersController",["$scope","$rootScope","$http","$stateParams","$location","Authentication","Jobfinders",function($scope,$rootScope,$http,$stateParams,$location,Authentication,Jobfinders){$scope.authentication=Authentication,$scope.create=function(){var jobfinder=new Jobfinders({title:this.title,description:this.description,company:this.company,location:this.location,industry:this.industry});jobfinder.$save(function(response){$location.path("jobfinders/"+response._id)},function(errorResponse){$scope.error=errorResponse.data.message}),this.title="",this.description="",this.company="",this.location="",this.industry=""},$scope.remove=function(jobfinder){if(jobfinder){jobfinder.$remove();for(var i in $scope.jobfinders)$scope.jobfinders[i]===jobfinder&&$scope.jobfinders.splice(i,1)}else $scope.jobfinder.$remove(function(){$location.path("jobfinders")})},$scope.update=function(){var jobfinder=$scope.jobfinder;console.log(jobfinder),jobfinder.$update(function(){$location.path("jobfinders/"+jobfinder._id)},function(errorResponse){$scope.error=errorResponse.data.message})},$scope.find=function(){$scope.jobfinders=Jobfinders.query()},$scope.findOne=function(){$rootScope.jobfinder=Jobfinders.get({jobfinderId:$stateParams.jobfinderId})}}]),angular.module("jobfinders").factory("Jobfinders",["$resource",function($resource){return $resource("jobfinders/:jobfinderId",{jobfinderId:"@_id"},{update:{method:"PUT"}})}]),angular.module("users").config(["$httpProvider",function($httpProvider){$httpProvider.interceptors.push(["$q","$location","Authentication",function($q,$location,Authentication){return{responseError:function(rejection){switch(rejection.status){case 401:Authentication.user=null,$location.path("signin");break;case 403:}return $q.reject(rejection)}}}])}]),angular.module("users").config(["$stateProvider",function($stateProvider){$stateProvider.state("profile",{url:"/settings/profile",templateUrl:"modules/users/views/settings/edit-profile.client.view.html"}).state("password",{url:"/settings/password",templateUrl:"modules/users/views/settings/change-password.client.view.html"}).state("accounts",{url:"/settings/accounts",templateUrl:"modules/users/views/settings/social-accounts.client.view.html"}).state("seeker_signup",{url:"/seeker_signup",templateUrl:"modules/users/views/seeker_signup.client.view.html"}).state("employer_signup",{url:"/employer_signup",templateUrl:"modules/users/views/employer_signup.client.view.html"}).state("signin",{url:"/signin",templateUrl:"modules/users/views/signin.client.view.html"}).state("applyJob",{url:"/applyJob",templateUrl:"modules/users/views/apply-job.client.view.html"})}]),angular.module("users").controller("AuthenticationController",["$scope","$http","$location","Authentication",function($scope,$http,$location,Authentication){$scope.authentication=Authentication,$scope.authentication.user&&$location.path("/"),$scope.signup=function(){$http.post("/auth/signup",$scope.credentials).success(function(response){$scope.authentication.user=response,$location.path("/")}).error(function(response){$scope.error=response.message})},$scope.signin=function(){$http.post("/auth/signin",$scope.credentials).success(function(response){$scope.authentication.user=response,$location.path("/")}).error(function(response){$scope.error=response.message})}}]),angular.module("users").controller("SettingsController",["$scope","$rootScope","$http","$location","Users","Authentication","$stateParams",function($scope,$rootScope,$http,$location,Users,Authentication){$scope.user=Authentication.user,$scope.user||$location.path("/"),$scope.hasConnectedAdditionalSocialAccounts=function(){for(var i in $scope.user.additionalProvidersData)return!0;return!1},$scope.isConnectedSocialAccount=function(provider){return $scope.user.provider===provider||$scope.user.additionalProvidersData&&$scope.user.additionalProvidersData[provider]},$scope.removeUserSocialAccount=function(provider){$scope.success=$scope.error=null,$http["delete"]("/users/accounts",{params:{provider:provider}}).success(function(response){$scope.success=!0,$scope.user=Authentication.user=response}).error(function(response){$scope.error=response.message})},$scope.updateUserProfile=function(){$scope.success=$scope.error=null;var user=new Users($scope.user);user.$update(function(response){$scope.success=!0,Authentication.user=response},function(response){$scope.error=response.data.message})},$scope.changeUserPassword=function(){$scope.success=$scope.error=null,$http.post("/users/password",$scope.passwordDetails).success(function(){$scope.success=!0,$scope.passwordDetails=null}).error(function(response){$scope.error=response.message})},$scope.getJobId=function(){$scope.job=$rootScope.jobfinder},$scope.apply=function(){$scope.success=$scope.error=null,$scope.jobApp=$scope.job;new Users($scope.user);$scope.user.empId=$scope.jobApp.user._id,$http.post("/users/applyJob",$scope.user).success(function(){$scope.success=!0,$location.path("/")})}}]),angular.module("users").factory("Authentication",[function(){var _this=this;return _this._data={user:window.user},_this._data}]),angular.module("users").factory("Users",["$resource",function($resource){return $resource("users",{},{update:{method:"PUT"}})}]);